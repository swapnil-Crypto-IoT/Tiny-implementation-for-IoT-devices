//******************************************Key layer**********************************************************
void key_schedule_1()                    //key scheduling done but need to check with ciphertext vector
{
 long int Key[4] = {0x00000000, 0x00000000, 0x00000000, 0x00000000};
//__________________
      rk[0][0] = Key[0];
      for(i=1;i<32;i++)
      {
        temp1 = temp2 = 0;
        temp1 = Key[0];
        temp2 = Key[1];

        Key[0]  = ((Key[1]&0X7)<<29)|(((Key[2]&0XFFFFFFF8))>>3) ;
        Key[1]  = ((Key[2]&0X7)<<29) |(((Key[3]&0XFFFFFFF8))>>3);
        Key[2]  = ((Key[3]&0X7)<<29) |(((temp1&0XFFFFFFF8))>>3);
        Key[3]  = ((temp1&0X7)<<29) |(((temp2&0XFFFFFFF8))>>3);    //left circular shift by 61

        temp1 = (Key[0]&0xff000000)>>24;
        temp2 = sbox[temp1&0xf];
        temp1 = sbox[(temp1>>4)&0xf];
        temp1 = (temp1<<4)|temp2;
        Key[0] = (Key[0]&0x00ffffff)|(temp1<<24);

        temp1 = ((Key[1]&0x7)<<2)|((Key[2]&0xc0000000)>>30);
        temp1 = temp1 ^ (i&0x1f);
        Key[1] = (Key[1]&0xfffffff8)|((temp1&0x1c)>>2);
        Key[2] = (Key[2]&0x3fffffff)|((temp1&0x03)<<30);

        rk[0][i] = Key[0];
       }
}

void key_schedule_2()                    //key scheduling done but need to check with ciphertext vector
{
 long int Key[4] = {0x00000000, 0x00000000, 0x00000000, 0x00000000};
//__________________

      rk[1][0] = Key[1];
      for(i=1;i<32;i++)
      {
        temp1 = temp2 = 0;
        temp1 = Key[0];
        temp2 = Key[1];

        Key[0]  = ((Key[1]&0X7)<<29)|(((Key[2]&0XFFFFFFF8))>>3) ;
        Key[1]  = ((Key[2]&0X7)<<29) |(((Key[3]&0XFFFFFFF8))>>3);
        Key[2]  = ((Key[3]&0X7)<<29) |(((temp1&0XFFFFFFF8))>>3);
        Key[3]  = ((temp1&0X7)<<29) |(((temp2&0XFFFFFFF8))>>3);    //left circular shift by 61

        temp1 = (Key[0]&0xff000000)>>24;
        temp2 = sbox[temp1&0xf];
        temp1 = sbox[(temp1>>4)&0xf];
        temp1 = (temp1<<4)|temp2;
        Key[0] = (Key[0]&0x00ffffff)|(temp1<<24);

        temp1 = ((Key[1]&0x7)<<2)|((Key[2]&0xc0000000)>>30);
        temp1 = temp1 ^ (i&0x1f);
        Key[1] = (Key[1]&0xfffffff8)|((temp1&0x1c)>>2);
        Key[2] = (Key[2]&0x3fffffff)|((temp1&0x03)<<30);

        rk[1][i] = Key[1];
        
       }
}
